<?php
/**
 * DaDaPushMessageApiTest
 * PHP version 5
 *
 * @category Class
 * @package  DaDaPushClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DaDaPush Public API
 *
 * DaDaPush: Real-time Notifications App Send real-time notifications through our API without coding and maintaining your own app for iOS or Android devices.
 *
 * The version of the OpenAPI document: v1
 * Contact: contacts@dadapush.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.2
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace DaDaPushClient;

use DaDaPushClient\Configuration;
use DaDaPushClient\Api\DaDaPushMessageApi;
use DaDaPushClient\Model\MessagePushRequest;
use DaDaPushClient\Model\Action;
use PHPUnit\Framework\TestCase;

/**
 * DaDaPushMessageApiTest Class Doc Comment
 *
 * @category Class
 * @package  DaDaPushClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DaDaPushMessageApiTest extends TestCase
{

    /**
     * Test case for createMessage
     *
     * push Message to a Channel.
     *
     */
    public function testCreateMessage()
    {
        $config = new Configuration();
//        $config->setHost("http://127.0.0.1:8080");
        $apiInstance = new DaDaPushMessageApi(
        // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
        // This is optional, `GuzzleHttp\Client` will be used as default.
            new \GuzzleHttp\Client(),
            $config
        );

        $actions = [
            new Action($data = array("name" => "view", "url" => "https://www.dadapush.com/", "type" => "link"))
        ];

        $body = new MessagePushRequest($data = array("title" => "Good News!",
            "content" => "Good News! DaDaPush releasing new version",
            "need_push" => true,
            "actions" => $actions
        ));

        $channel_token = 'ctb3lwO6AeiZOwqZgp8BE8980FdNgp0cp6MCf';

        $result = $apiInstance->createMessage($body, $channel_token);
        print_r($result);
        self::assertTrue($result->getCode()==0);
    }

    /**
     * Test case for deleteMessage
     *
     * delete a Channel Message.
     *
     */
    public function testDeleteMessage()
    {
        $config = new Configuration();
//        $config->setHost("http://127.0.0.1:8080");
        $apiInstance = new DaDaPushMessageApi(
        // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
        // This is optional, `GuzzleHttp\Client` will be used as default.
            new \GuzzleHttp\Client(),
            $config
        );

        $channel_token = 'ctb3lwO6AeiZOwqZgp8BE8980FdNgp0cp6MCf';
        $message_id=227845;
        $result = $apiInstance->deleteMessage($message_id, $channel_token);
        print_r($result);
        self::assertTrue($result->getCode()==0);
    }

    /**
     * Test case for getMessage
     *
     * get a Channel Message.
     *
     */
    public function testGetMessage()
    {
        $config = new Configuration();
//        $config->setHost("http://127.0.0.1:8080");
        $apiInstance = new DaDaPushMessageApi(
        // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
        // This is optional, `GuzzleHttp\Client` will be used as default.
            new \GuzzleHttp\Client(),
            $config
        );

        $channel_token = 'ctb3lwO6AeiZOwqZgp8BE8980FdNgp0cp6MCf';
        $message_id=227845;
        $result = $apiInstance->getMessage($message_id, $channel_token);
        print_r($result);
        self::assertTrue($result->getCode()==0);
    }

    /**
     * Test case for getMessages
     *
     * get Message List.
     *
     */
    public function testGetMessages()
    {
        $config = new Configuration();
//        $config->setHost("http://127.0.0.1:8080");
        $apiInstance = new DaDaPushMessageApi(
        // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
        // This is optional, `GuzzleHttp\Client` will be used as default.
            new \GuzzleHttp\Client(),
            $config
        );

        $channel_token = 'ctb3lwO6AeiZOwqZgp8BE8980FdNgp0cp6MCf';
        $page=1;
        $page_size=10;

        $result = $apiInstance->getMessages($page,$page_size, $channel_token);
        print_r($result);
        self::assertTrue($result->getCode()==0);
    }
}
